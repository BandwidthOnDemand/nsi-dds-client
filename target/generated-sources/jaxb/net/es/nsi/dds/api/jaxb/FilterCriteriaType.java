//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.30 at 11:05:06 PM EDT 
//


package net.es.nsi.dds.api.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *                 This type models the criteria that can be included in the
 *                 notfication filter for subscriptions.
 *                 
 *                 Elements:
 *                 
 *                 event \u2013 The type of document event that will generate a
 *                 notification.  Currently only three events are supported (All,
 *                 New, Updated).  At least one of event criteria must be
 *                 supplied.  The default event criteria is All.
 *                 
 *                 or \u2013 Any document matching any of the supplied nsa, document
 *                 type, or document id values.
 *                 
 *                 and - Any document matching all of the supplied nsa, document
 *                 type, or document id values (logical AND).
 *             
 * 
 * <p>Java class for FilterCriteriaType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FilterCriteriaType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="event" type="{http://schemas.ogf.org/nsi/2014/02/discovery/types}DocumentEventType" maxOccurs="3"/>
 *         &lt;element name="or" type="{http://schemas.ogf.org/nsi/2014/02/discovery/types}FilterOrType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="and" type="{http://schemas.ogf.org/nsi/2014/02/discovery/types}FilterAndType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FilterCriteriaType", namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", propOrder = {
    "event",
    "or",
    "and"
})
public class FilterCriteriaType {

    @XmlElement(required = true, defaultValue = "All")
    protected List<DocumentEventType> event;
    protected List<FilterOrType> or;
    protected List<FilterAndType> and;

    /**
     * Gets the value of the event property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the event property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEvent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentEventType }
     * 
     * 
     */
    public List<DocumentEventType> getEvent() {
        if (event == null) {
            event = new ArrayList<DocumentEventType>();
        }
        return this.event;
    }

    /**
     * Gets the value of the or property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the or property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOr().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FilterOrType }
     * 
     * 
     */
    public List<FilterOrType> getOr() {
        if (or == null) {
            or = new ArrayList<FilterOrType>();
        }
        return this.or;
    }

    /**
     * Gets the value of the and property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the and property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnd().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FilterAndType }
     * 
     * 
     */
    public List<FilterAndType> getAnd() {
        if (and == null) {
            and = new ArrayList<FilterAndType>();
        }
        return this.and;
    }

}
