//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.30 at 11:05:06 PM EDT 
//


package net.es.nsi.dds.api.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.es.nsi.dds.api.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Label_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "Label");
    private final static QName _Pref_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "pref");
    private final static QName _BaseParameter_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "baseParameter");
    private final static QName _ServiceDefinition_QNAME = new QName("http://schemas.ogf.org/nsi/2013/12/services/definition", "serviceDefinition");
    private final static QName _BidirectionalPort_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "BidirectionalPort");
    private final static QName _Collection_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "collection");
    private final static QName _SwitchingService_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "SwitchingService");
    private final static QName _Port_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "Port");
    private final static QName _Link_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "Link");
    private final static QName _ConnectionTrace_QNAME = new QName("http://nordu.net/namespaces/2013/12/gnsbod", "ConnectionTrace");
    private final static QName _Vcards_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "vcards");
    private final static QName _Node_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "Node");
    private final static QName _LinkGroup_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "LinkGroup");
    private final static QName _BidirectionalLink_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "BidirectionalLink");
    private final static QName _Uri_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "uri");
    private final static QName _xLabel_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "label");
    private final static QName _Notification_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "notification");
    private final static QName _NSA_QNAME = new QName("http://schemas.ogf.org/nsi/2013/09/topology#", "NSA");
    private final static QName _N_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "n");
    private final static QName _Relation_QNAME = new QName("http://schemas.ogf.org/nsi/2013/09/topology#", "Relation");
    private final static QName _Subscription_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "subscription");
    private final static QName _Text_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "text");
    private final static QName _Document_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "document");
    private final static QName _TopologyReachability_QNAME = new QName("http://nordu.net/namespaces/2013/12/gnsbod", "TopologyReachability");
    private final static QName _Fn_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "fn");
    private final static QName _Discovery_QNAME = new QName("http://schemas.es.net/nsi/2014/03/pce/discovery/configuration", "discovery");
    private final static QName _Parameters_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "parameters");
    private final static QName _SubscriptionRequest_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "subscriptionRequest");
    private final static QName _Error_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "error");
    private final static QName _AdaptationService_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "AdaptationService");
    private final static QName _Subscriptions_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "subscriptions");
    private final static QName _Documents_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "documents");
    private final static QName _Bday_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "bday");
    private final static QName _Timestamp_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "timestamp");
    private final static QName _XUid_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "x-uid");
    private final static QName _Topology_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "Topology");
    private final static QName _Type_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "type");
    private final static QName _Date_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "date");
    private final static QName _Nsa_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/nsa", "nsa");
    private final static QName _NsaService_QNAME = new QName("http://schemas.ogf.org/nsi/2013/09/topology#", "Service");
    private final static QName _Local_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "local");
    private final static QName _PortGroup_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "PortGroup");
    private final static QName _Notifications_QNAME = new QName("http://schemas.ogf.org/nsi/2014/02/discovery/types", "notifications");
    private final static QName _DateTime_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "date-time");
    private final static QName _BaseProperty_QNAME = new QName("urn:ietf:params:xml:ns:vcard-4.0", "baseProperty");
    private final static QName _LabelGroup_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "LabelGroup");
    private final static QName _DeadaptationService_QNAME = new QName("http://schemas.ogf.org/nml/2013/05/base#", "DeadaptationService");
    private final static QName _FilterOrTypeId_QNAME = new QName("", "id");
    private final static QName _FilterOrTypeNsa_QNAME = new QName("", "nsa");
    private final static QName _FilterOrTypeType_QNAME = new QName("", "type");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.es.nsi.dds.api.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link XcardLabelParamType }
     * 
     */
    public XcardLabelParamType createXcardLabelParamType() {
        return new XcardLabelParamType();
    }

    /**
     * Create an instance of {@link NmlNetworkObject }
     * 
     */
    public NmlNetworkObject createNmlNetworkObject() {
        return new NmlNetworkObject();
    }

    /**
     * Create an instance of {@link NmlNSAType }
     * 
     */
    public NmlNSAType createNmlNSAType() {
        return new NmlNSAType();
    }

    /**
     * Create an instance of {@link NmlBidirectionalLinkType }
     * 
     */
    public NmlBidirectionalLinkType createNmlBidirectionalLinkType() {
        return new NmlBidirectionalLinkType();
    }

    /**
     * Create an instance of {@link NmlExtensionType }
     * 
     */
    public NmlExtensionType createNmlExtensionType() {
        return new NmlExtensionType();
    }

    /**
     * Create an instance of {@link XcardNotePropType }
     * 
     */
    public XcardNotePropType createXcardNotePropType() {
        return new XcardNotePropType();
    }

    /**
     * Create an instance of {@link XcardGenderPropType }
     * 
     */
    public XcardGenderPropType createXcardGenderPropType() {
        return new XcardGenderPropType();
    }

    /**
     * Create an instance of {@link XcardAffiliationPropType }
     * 
     */
    public XcardAffiliationPropType createXcardAffiliationPropType() {
        return new XcardAffiliationPropType();
    }

    /**
     * Create an instance of {@link ConnectionTraceType }
     * 
     */
    public ConnectionTraceType createConnectionTraceType() {
        return new ConnectionTraceType();
    }

    /**
     * Create an instance of {@link XcardNonEmptyTextListPropertyType }
     * 
     */
    public XcardNonEmptyTextListPropertyType createXcardNonEmptyTextListPropertyType() {
        return new XcardNonEmptyTextListPropertyType();
    }

    /**
     * Create an instance of {@link XcardUrlPropType }
     * 
     */
    public XcardUrlPropType createXcardUrlPropType() {
        return new XcardUrlPropType();
    }

    /**
     * Create an instance of {@link XcardRevPropType }
     * 
     */
    public XcardRevPropType createXcardRevPropType() {
        return new XcardRevPropType();
    }

    /**
     * Create an instance of {@link XcardNPropType }
     * 
     */
    public XcardNPropType createXcardNPropType() {
        return new XcardNPropType();
    }

    /**
     * Create an instance of {@link XcardImppPropType }
     * 
     */
    public XcardImppPropType createXcardImppPropType() {
        return new XcardImppPropType();
    }

    /**
     * Create an instance of {@link XcardPrefParamType }
     * 
     */
    public XcardPrefParamType createXcardPrefParamType() {
        return new XcardPrefParamType();
    }

    /**
     * Create an instance of {@link XcardRelatedPropType }
     * 
     */
    public XcardRelatedPropType createXcardRelatedPropType() {
        return new XcardRelatedPropType();
    }

    /**
     * Create an instance of {@link NmlPortType }
     * 
     */
    public NmlPortType createNmlPortType() {
        return new NmlPortType();
    }

    /**
     * Create an instance of {@link XcardDateDatetimePropertyType }
     * 
     */
    public XcardDateDatetimePropertyType createXcardDateDatetimePropertyType() {
        return new XcardDateDatetimePropertyType();
    }

    /**
     * Create an instance of {@link NmlSwitchingServiceRelationType }
     * 
     */
    public NmlSwitchingServiceRelationType createNmlSwitchingServiceRelationType() {
        return new NmlSwitchingServiceRelationType();
    }

    /**
     * Create an instance of {@link TopologyReachabilityType }
     * 
     */
    public TopologyReachabilityType createTopologyReachabilityType() {
        return new TopologyReachabilityType();
    }

    /**
     * Create an instance of {@link TopologyType }
     * 
     */
    public TopologyType createTopologyType() {
        return new TopologyType();
    }

    /**
     * Create an instance of {@link XcardKeyPropType }
     * 
     */
    public XcardKeyPropType createXcardKeyPropType() {
        return new XcardKeyPropType();
    }

    /**
     * Create an instance of {@link XcardFburlPropType }
     * 
     */
    public XcardFburlPropType createXcardFburlPropType() {
        return new XcardFburlPropType();
    }

    /**
     * Create an instance of {@link DocumentListType }
     * 
     */
    public DocumentListType createDocumentListType() {
        return new DocumentListType();
    }

    /**
     * Create an instance of {@link XcardUriParameterType }
     * 
     */
    public XcardUriParameterType createXcardUriParameterType() {
        return new XcardUriParameterType();
    }

    /**
     * Create an instance of {@link NmlNodeRelationType }
     * 
     */
    public NmlNodeRelationType createNmlNodeRelationType() {
        return new NmlNodeRelationType();
    }

    /**
     * Create an instance of {@link NmlDeadaptationServiceRelationType }
     * 
     */
    public NmlDeadaptationServiceRelationType createNmlDeadaptationServiceRelationType() {
        return new NmlDeadaptationServiceRelationType();
    }

    /**
     * Create an instance of {@link XcardXuidParamType }
     * 
     */
    public XcardXuidParamType createXcardXuidParamType() {
        return new XcardXuidParamType();
    }

    /**
     * Create an instance of {@link XcardTextListPropertyType }
     * 
     */
    public XcardTextListPropertyType createXcardTextListPropertyType() {
        return new XcardTextListPropertyType();
    }

    /**
     * Create an instance of {@link NsaType }
     * 
     */
    public NsaType createNsaType() {
        return new NsaType();
    }

    /**
     * Create an instance of {@link NmlPortGroupRelationType }
     * 
     */
    public NmlPortGroupRelationType createNmlPortGroupRelationType() {
        return new NmlPortGroupRelationType();
    }

    /**
     * Create an instance of {@link NmlLocationType }
     * 
     */
    public NmlLocationType createNmlLocationType() {
        return new NmlLocationType();
    }

    /**
     * Create an instance of {@link XcardBdayPropType }
     * 
     */
    public XcardBdayPropType createXcardBdayPropType() {
        return new XcardBdayPropType();
    }

    /**
     * Create an instance of {@link XcardAdrPropType }
     * 
     */
    public XcardAdrPropType createXcardAdrPropType() {
        return new XcardAdrPropType();
    }

    /**
     * Create an instance of {@link FilterAndType }
     * 
     */
    public FilterAndType createFilterAndType() {
        return new FilterAndType();
    }

    /**
     * Create an instance of {@link NmlLabelGroupType }
     * 
     */
    public NmlLabelGroupType createNmlLabelGroupType() {
        return new NmlLabelGroupType();
    }

    /**
     * Create an instance of {@link NmlLinkType }
     * 
     */
    public NmlLinkType createNmlLinkType() {
        return new NmlLinkType();
    }

    /**
     * Create an instance of {@link NotificationListType }
     * 
     */
    public NotificationListType createNotificationListType() {
        return new NotificationListType();
    }

    /**
     * Create an instance of {@link NmlDeadaptationServiceType }
     * 
     */
    public NmlDeadaptationServiceType createNmlDeadaptationServiceType() {
        return new NmlDeadaptationServiceType();
    }

    /**
     * Create an instance of {@link HolderType }
     * 
     */
    public HolderType createHolderType() {
        return new HolderType();
    }

    /**
     * Create an instance of {@link SubscriptionRequestType }
     * 
     */
    public SubscriptionRequestType createSubscriptionRequestType() {
        return new SubscriptionRequestType();
    }

    /**
     * Create an instance of {@link NmlNSARelationType }
     * 
     */
    public NmlNSARelationType createNmlNSARelationType() {
        return new NmlNSARelationType();
    }

    /**
     * Create an instance of {@link InterfaceType }
     * 
     */
    public InterfaceType createInterfaceType() {
        return new InterfaceType();
    }

    /**
     * Create an instance of {@link ErrorType }
     * 
     */
    public ErrorType createErrorType() {
        return new ErrorType();
    }

    /**
     * Create an instance of {@link SdServiceDefinitionType }
     * 
     */
    public SdServiceDefinitionType createSdServiceDefinitionType() {
        return new SdServiceDefinitionType();
    }

    /**
     * Create an instance of {@link DocumentType }
     * 
     */
    public DocumentType createDocumentType() {
        return new DocumentType();
    }

    /**
     * Create an instance of {@link XcardGeoPropType }
     * 
     */
    public XcardGeoPropType createXcardGeoPropType() {
        return new XcardGeoPropType();
    }

    /**
     * Create an instance of {@link SdSchemaType }
     * 
     */
    public SdSchemaType createSdSchemaType() {
        return new SdSchemaType();
    }

    /**
     * Create an instance of {@link XcardAnniversaryPropType }
     * 
     */
    public XcardAnniversaryPropType createXcardAnniversaryPropType() {
        return new XcardAnniversaryPropType();
    }

    /**
     * Create an instance of {@link SubscriptionListType }
     * 
     */
    public SubscriptionListType createSubscriptionListType() {
        return new SubscriptionListType();
    }

    /**
     * Create an instance of {@link NmlServiceType }
     * 
     */
    public NmlServiceType createNmlServiceType() {
        return new NmlServiceType();
    }

    /**
     * Create an instance of {@link XcardCategoriesPropType }
     * 
     */
    public XcardCategoriesPropType createXcardCategoriesPropType() {
        return new XcardCategoriesPropType();
    }

    /**
     * Create an instance of {@link LocationType }
     * 
     */
    public LocationType createLocationType() {
        return new LocationType();
    }

    /**
     * Create an instance of {@link XcardLangPropType }
     * 
     */
    public XcardLangPropType createXcardLangPropType() {
        return new XcardLangPropType();
    }

    /**
     * Create an instance of {@link XcardProdidPropType }
     * 
     */
    public XcardProdidPropType createXcardProdidPropType() {
        return new XcardProdidPropType();
    }

    /**
     * Create an instance of {@link NmlLocationType.NmlAddress }
     * 
     */
    public NmlLocationType.NmlAddress createNmlLocationTypeNmlAddress() {
        return new NmlLocationType.NmlAddress();
    }

    /**
     * Create an instance of {@link NmlLabelType }
     * 
     */
    public NmlLabelType createNmlLabelType() {
        return new NmlLabelType();
    }

    /**
     * Create an instance of {@link SubscriptionType }
     * 
     */
    public SubscriptionType createSubscriptionType() {
        return new SubscriptionType();
    }

    /**
     * Create an instance of {@link PeerURLType }
     * 
     */
    public PeerURLType createPeerURLType() {
        return new PeerURLType();
    }

    /**
     * Create an instance of {@link NmlPortGroupType }
     * 
     */
    public NmlPortGroupType createNmlPortGroupType() {
        return new NmlPortGroupType();
    }

    /**
     * Create an instance of {@link XcardArrayOfParameters }
     * 
     */
    public XcardArrayOfParameters createXcardArrayOfParameters() {
        return new XcardArrayOfParameters();
    }

    /**
     * Create an instance of {@link XcardTelPropType }
     * 
     */
    public XcardTelPropType createXcardTelPropType() {
        return new XcardTelPropType();
    }

    /**
     * Create an instance of {@link ConnectionType }
     * 
     */
    public ConnectionType createConnectionType() {
        return new ConnectionType();
    }

    /**
     * Create an instance of {@link AnyType }
     * 
     */
    public AnyType createAnyType() {
        return new AnyType();
    }

    /**
     * Create an instance of {@link NmlLinkRelationType }
     * 
     */
    public NmlLinkRelationType createNmlLinkRelationType() {
        return new NmlLinkRelationType();
    }

    /**
     * Create an instance of {@link NmlBidirectionalPortType }
     * 
     */
    public NmlBidirectionalPortType createNmlBidirectionalPortType() {
        return new NmlBidirectionalPortType();
    }

    /**
     * Create an instance of {@link XcardTitlePropType }
     * 
     */
    public XcardTitlePropType createXcardTitlePropType() {
        return new XcardTitlePropType();
    }

    /**
     * Create an instance of {@link XcardFnPropType }
     * 
     */
    public XcardFnPropType createXcardFnPropType() {
        return new XcardFnPropType();
    }

    /**
     * Create an instance of {@link NmlSwitchingServiceType }
     * 
     */
    public NmlSwitchingServiceType createNmlSwitchingServiceType() {
        return new NmlSwitchingServiceType();
    }

    /**
     * Create an instance of {@link CollectionType }
     * 
     */
    public CollectionType createCollectionType() {
        return new CollectionType();
    }

    /**
     * Create an instance of {@link NmlTopologyType }
     * 
     */
    public NmlTopologyType createNmlTopologyType() {
        return new NmlTopologyType();
    }

    /**
     * Create an instance of {@link FilterOrType }
     * 
     */
    public FilterOrType createFilterOrType() {
        return new FilterOrType();
    }

    /**
     * Create an instance of {@link NmlAdaptationServiceType }
     * 
     */
    public NmlAdaptationServiceType createNmlAdaptationServiceType() {
        return new NmlAdaptationServiceType();
    }

    /**
     * Create an instance of {@link XcardTextOrUriPropertyType }
     * 
     */
    public XcardTextOrUriPropertyType createXcardTextOrUriPropertyType() {
        return new XcardTextOrUriPropertyType();
    }

    /**
     * Create an instance of {@link NmlLinkGroupRelationType }
     * 
     */
    public NmlLinkGroupRelationType createNmlLinkGroupRelationType() {
        return new NmlLinkGroupRelationType();
    }

    /**
     * Create an instance of {@link SdAttributeType }
     * 
     */
    public SdAttributeType createSdAttributeType() {
        return new SdAttributeType();
    }

    /**
     * Create an instance of {@link XcardKindPropType }
     * 
     */
    public XcardKindPropType createXcardKindPropType() {
        return new XcardKindPropType();
    }

    /**
     * Create an instance of {@link FilterType }
     * 
     */
    public FilterType createFilterType() {
        return new FilterType();
    }

    /**
     * Create an instance of {@link XcardTextPropertyType }
     * 
     */
    public XcardTextPropertyType createXcardTextPropertyType() {
        return new XcardTextPropertyType();
    }

    /**
     * Create an instance of {@link XcardPhotoPropType }
     * 
     */
    public XcardPhotoPropType createXcardPhotoPropType() {
        return new XcardPhotoPropType();
    }

    /**
     * Create an instance of {@link XcardVcardsType }
     * 
     */
    public XcardVcardsType createXcardVcardsType() {
        return new XcardVcardsType();
    }

    /**
     * Create an instance of {@link SdAdaptationType }
     * 
     */
    public SdAdaptationType createSdAdaptationType() {
        return new SdAdaptationType();
    }

    /**
     * Create an instance of {@link NotificationType }
     * 
     */
    public NotificationType createNotificationType() {
        return new NotificationType();
    }

    /**
     * Create an instance of {@link NmlLifeTimeType }
     * 
     */
    public NmlLifeTimeType createNmlLifeTimeType() {
        return new NmlLifeTimeType();
    }

    /**
     * Create an instance of {@link XcardMemberPropType }
     * 
     */
    public XcardMemberPropType createXcardMemberPropType() {
        return new XcardMemberPropType();
    }

    /**
     * Create an instance of {@link NmlPortRelationType }
     * 
     */
    public NmlPortRelationType createNmlPortRelationType() {
        return new NmlPortRelationType();
    }

    /**
     * Create an instance of {@link NmlTopologyRelationType }
     * 
     */
    public NmlTopologyRelationType createNmlTopologyRelationType() {
        return new NmlTopologyRelationType();
    }

    /**
     * Create an instance of {@link NmlServiceRelationType }
     * 
     */
    public NmlServiceRelationType createNmlServiceRelationType() {
        return new NmlServiceRelationType();
    }

    /**
     * Create an instance of {@link FilterCriteriaType }
     * 
     */
    public FilterCriteriaType createFilterCriteriaType() {
        return new FilterCriteriaType();
    }

    /**
     * Create an instance of {@link XcardTextParameterType }
     * 
     */
    public XcardTextParameterType createXcardTextParameterType() {
        return new XcardTextParameterType();
    }

    /**
     * Create an instance of {@link SdParameterType }
     * 
     */
    public SdParameterType createSdParameterType() {
        return new SdParameterType();
    }

    /**
     * Create an instance of {@link SdErrorType }
     * 
     */
    public SdErrorType createSdErrorType() {
        return new SdErrorType();
    }

    /**
     * Create an instance of {@link XcardVcardsType.XcardVcard }
     * 
     */
    public XcardVcardsType.XcardVcard createXcardVcardsTypeXcardVcard() {
        return new XcardVcardsType.XcardVcard();
    }

    /**
     * Create an instance of {@link NmlLinkGroupType }
     * 
     */
    public NmlLinkGroupType createNmlLinkGroupType() {
        return new NmlLinkGroupType();
    }

    /**
     * Create an instance of {@link DiscoveryConfigurationType }
     * 
     */
    public DiscoveryConfigurationType createDiscoveryConfigurationType() {
        return new DiscoveryConfigurationType();
    }

    /**
     * Create an instance of {@link XcardTypeParamType }
     * 
     */
    public XcardTypeParamType createXcardTypeParamType() {
        return new XcardTypeParamType();
    }

    /**
     * Create an instance of {@link NmlAdaptationServiceRelationType }
     * 
     */
    public NmlAdaptationServiceRelationType createNmlAdaptationServiceRelationType() {
        return new NmlAdaptationServiceRelationType();
    }

    /**
     * Create an instance of {@link NmlNodeType }
     * 
     */
    public NmlNodeType createNmlNodeType() {
        return new NmlNodeType();
    }

    /**
     * Create an instance of {@link XcardEmailPropType }
     * 
     */
    public XcardEmailPropType createXcardEmailPropType() {
        return new XcardEmailPropType();
    }

    /**
     * Create an instance of {@link XcardUriPropertyType }
     * 
     */
    public XcardUriPropertyType createXcardUriPropertyType() {
        return new XcardUriPropertyType();
    }

    /**
     * Create an instance of {@link FeatureType }
     * 
     */
    public FeatureType createFeatureType() {
        return new FeatureType();
    }

    /**
     * Create an instance of {@link XcardNicknamePropType }
     * 
     */
    public XcardNicknamePropType createXcardNicknamePropType() {
        return new XcardNicknamePropType();
    }

    /**
     * Create an instance of {@link XcardUidPropType }
     * 
     */
    public XcardUidPropType createXcardUidPropType() {
        return new XcardUidPropType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlLabelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "Label")
    public JAXBElement<NmlLabelType> createLabel(NmlLabelType value) {
        return new JAXBElement<NmlLabelType>(_Label_QNAME, NmlLabelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardPrefParamType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "pref", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseParameter")
    public JAXBElement<XcardPrefParamType> createPref(XcardPrefParamType value) {
        return new JAXBElement<XcardPrefParamType>(_Pref_QNAME, XcardPrefParamType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardBaseParameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "baseParameter")
    public JAXBElement<XcardBaseParameterType> createBaseParameter(XcardBaseParameterType value) {
        return new JAXBElement<XcardBaseParameterType>(_BaseParameter_QNAME, XcardBaseParameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SdServiceDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2013/12/services/definition", name = "serviceDefinition")
    public JAXBElement<SdServiceDefinitionType> createServiceDefinition(SdServiceDefinitionType value) {
        return new JAXBElement<SdServiceDefinitionType>(_ServiceDefinition_QNAME, SdServiceDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlBidirectionalPortType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "BidirectionalPort")
    public JAXBElement<NmlBidirectionalPortType> createBidirectionalPort(NmlBidirectionalPortType value) {
        return new JAXBElement<NmlBidirectionalPortType>(_BidirectionalPort_QNAME, NmlBidirectionalPortType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CollectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "collection")
    public JAXBElement<CollectionType> createCollection(CollectionType value) {
        return new JAXBElement<CollectionType>(_Collection_QNAME, CollectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlSwitchingServiceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "SwitchingService")
    public JAXBElement<NmlSwitchingServiceType> createSwitchingService(NmlSwitchingServiceType value) {
        return new JAXBElement<NmlSwitchingServiceType>(_SwitchingService_QNAME, NmlSwitchingServiceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlPortType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "Port")
    public JAXBElement<NmlPortType> createPort(NmlPortType value) {
        return new JAXBElement<NmlPortType>(_Port_QNAME, NmlPortType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlLinkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "Link")
    public JAXBElement<NmlLinkType> createLink(NmlLinkType value) {
        return new JAXBElement<NmlLinkType>(_Link_QNAME, NmlLinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConnectionTraceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://nordu.net/namespaces/2013/12/gnsbod", name = "ConnectionTrace")
    public JAXBElement<ConnectionTraceType> createConnectionTrace(ConnectionTraceType value) {
        return new JAXBElement<ConnectionTraceType>(_ConnectionTrace_QNAME, ConnectionTraceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardVcardsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "vcards")
    public JAXBElement<XcardVcardsType> createVcards(XcardVcardsType value) {
        return new JAXBElement<XcardVcardsType>(_Vcards_QNAME, XcardVcardsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlNodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "Node")
    public JAXBElement<NmlNodeType> createNode(NmlNodeType value) {
        return new JAXBElement<NmlNodeType>(_Node_QNAME, NmlNodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlLinkGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "LinkGroup")
    public JAXBElement<NmlLinkGroupType> createLinkGroup(NmlLinkGroupType value) {
        return new JAXBElement<NmlLinkGroupType>(_LinkGroup_QNAME, NmlLinkGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlBidirectionalLinkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "BidirectionalLink")
    public JAXBElement<NmlBidirectionalLinkType> createBidirectionalLink(NmlBidirectionalLinkType value) {
        return new JAXBElement<NmlBidirectionalLinkType>(_BidirectionalLink_QNAME, NmlBidirectionalLinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "uri")
    public JAXBElement<String> createUri(String value) {
        return new JAXBElement<String>(_Uri_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardLabelParamType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "label", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseParameter")
    public JAXBElement<XcardLabelParamType> createxLabel(XcardLabelParamType value) {
        return new JAXBElement<XcardLabelParamType>(_xLabel_QNAME, XcardLabelParamType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotificationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "notification")
    public JAXBElement<NotificationType> createNotification(NotificationType value) {
        return new JAXBElement<NotificationType>(_Notification_QNAME, NotificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlNSAType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2013/09/topology#", name = "NSA")
    public JAXBElement<NmlNSAType> createNSA(NmlNSAType value) {
        return new JAXBElement<NmlNSAType>(_NSA_QNAME, NmlNSAType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardNPropType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "n", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseProperty")
    public JAXBElement<XcardNPropType> createN(XcardNPropType value) {
        return new JAXBElement<XcardNPropType>(_N_QNAME, XcardNPropType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlNSARelationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2013/09/topology#", name = "Relation")
    public JAXBElement<NmlNSARelationType> createRelation(NmlNSARelationType value) {
        return new JAXBElement<NmlNSARelationType>(_Relation_QNAME, NmlNSARelationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubscriptionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "subscription")
    public JAXBElement<SubscriptionType> createSubscription(SubscriptionType value) {
        return new JAXBElement<SubscriptionType>(_Subscription_QNAME, SubscriptionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "text")
    public JAXBElement<String> createText(String value) {
        return new JAXBElement<String>(_Text_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocumentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "document")
    public JAXBElement<DocumentType> createDocument(DocumentType value) {
        return new JAXBElement<DocumentType>(_Document_QNAME, DocumentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TopologyReachabilityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://nordu.net/namespaces/2013/12/gnsbod", name = "TopologyReachability")
    public JAXBElement<TopologyReachabilityType> createTopologyReachability(TopologyReachabilityType value) {
        return new JAXBElement<TopologyReachabilityType>(_TopologyReachability_QNAME, TopologyReachabilityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardFnPropType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "fn", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseProperty")
    public JAXBElement<XcardFnPropType> createFn(XcardFnPropType value) {
        return new JAXBElement<XcardFnPropType>(_Fn_QNAME, XcardFnPropType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DiscoveryConfigurationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.es.net/nsi/2014/03/pce/discovery/configuration", name = "discovery")
    public JAXBElement<DiscoveryConfigurationType> createDiscovery(DiscoveryConfigurationType value) {
        return new JAXBElement<DiscoveryConfigurationType>(_Discovery_QNAME, DiscoveryConfigurationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardArrayOfParameters }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "parameters")
    public JAXBElement<XcardArrayOfParameters> createParameters(XcardArrayOfParameters value) {
        return new JAXBElement<XcardArrayOfParameters>(_Parameters_QNAME, XcardArrayOfParameters.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubscriptionRequestType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "subscriptionRequest")
    public JAXBElement<SubscriptionRequestType> createSubscriptionRequest(SubscriptionRequestType value) {
        return new JAXBElement<SubscriptionRequestType>(_SubscriptionRequest_QNAME, SubscriptionRequestType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ErrorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "error")
    public JAXBElement<ErrorType> createError(ErrorType value) {
        return new JAXBElement<ErrorType>(_Error_QNAME, ErrorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlAdaptationServiceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "AdaptationService")
    public JAXBElement<NmlAdaptationServiceType> createAdaptationService(NmlAdaptationServiceType value) {
        return new JAXBElement<NmlAdaptationServiceType>(_AdaptationService_QNAME, NmlAdaptationServiceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubscriptionListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "subscriptions")
    public JAXBElement<SubscriptionListType> createSubscriptions(SubscriptionListType value) {
        return new JAXBElement<SubscriptionListType>(_Subscriptions_QNAME, SubscriptionListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocumentListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "documents")
    public JAXBElement<DocumentListType> createDocuments(DocumentListType value) {
        return new JAXBElement<DocumentListType>(_Documents_QNAME, DocumentListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardBdayPropType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "bday", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseProperty")
    public JAXBElement<XcardBdayPropType> createBday(XcardBdayPropType value) {
        return new JAXBElement<XcardBdayPropType>(_Bday_QNAME, XcardBdayPropType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "timestamp")
    public JAXBElement<String> createTimestamp(String value) {
        return new JAXBElement<String>(_Timestamp_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardXuidParamType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "x-uid", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseParameter")
    public JAXBElement<XcardXuidParamType> createXUid(XcardXuidParamType value) {
        return new JAXBElement<XcardXuidParamType>(_XUid_QNAME, XcardXuidParamType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlTopologyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "Topology")
    public JAXBElement<NmlTopologyType> createTopology(NmlTopologyType value) {
        return new JAXBElement<NmlTopologyType>(_Topology_QNAME, NmlTopologyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardTypeParamType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "type", substitutionHeadNamespace = "urn:ietf:params:xml:ns:vcard-4.0", substitutionHeadName = "baseParameter")
    public JAXBElement<XcardTypeParamType> createType(XcardTypeParamType value) {
        return new JAXBElement<XcardTypeParamType>(_Type_QNAME, XcardTypeParamType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "date")
    public JAXBElement<String> createDate(String value) {
        return new JAXBElement<String>(_Date_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NsaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/nsa", name = "nsa")
    public JAXBElement<NsaType> createNsa(NsaType value) {
        return new JAXBElement<NsaType>(_Nsa_QNAME, NsaType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlServiceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2013/09/topology#", name = "Service")
    public JAXBElement<NmlServiceType> createNsaService(NmlServiceType value) {
        return new JAXBElement<NmlServiceType>(_NsaService_QNAME, NmlServiceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocumentListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "local")
    public JAXBElement<DocumentListType> createLocal(DocumentListType value) {
        return new JAXBElement<DocumentListType>(_Local_QNAME, DocumentListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlPortGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "PortGroup")
    public JAXBElement<NmlPortGroupType> createPortGroup(NmlPortGroupType value) {
        return new JAXBElement<NmlPortGroupType>(_PortGroup_QNAME, NmlPortGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotificationListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nsi/2014/02/discovery/types", name = "notifications")
    public JAXBElement<NotificationListType> createNotifications(NotificationListType value) {
        return new JAXBElement<NotificationListType>(_Notifications_QNAME, NotificationListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "date-time")
    public JAXBElement<String> createDateTime(String value) {
        return new JAXBElement<String>(_DateTime_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XcardBasePropertyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:ietf:params:xml:ns:vcard-4.0", name = "baseProperty")
    public JAXBElement<XcardBasePropertyType> createBaseProperty(XcardBasePropertyType value) {
        return new JAXBElement<XcardBasePropertyType>(_BaseProperty_QNAME, XcardBasePropertyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlLabelGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "LabelGroup")
    public JAXBElement<NmlLabelGroupType> createLabelGroup(NmlLabelGroupType value) {
        return new JAXBElement<NmlLabelGroupType>(_LabelGroup_QNAME, NmlLabelGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NmlDeadaptationServiceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://schemas.ogf.org/nml/2013/05/base#", name = "DeadaptationService")
    public JAXBElement<NmlDeadaptationServiceType> createDeadaptationService(NmlDeadaptationServiceType value) {
        return new JAXBElement<NmlDeadaptationServiceType>(_DeadaptationService_QNAME, NmlDeadaptationServiceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "id", scope = FilterOrType.class)
    public JAXBElement<String> createFilterOrTypeId(String value) {
        return new JAXBElement<String>(_FilterOrTypeId_QNAME, String.class, FilterOrType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "nsa", scope = FilterOrType.class)
    public JAXBElement<String> createFilterOrTypeNsa(String value) {
        return new JAXBElement<String>(_FilterOrTypeNsa_QNAME, String.class, FilterOrType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "type", scope = FilterOrType.class)
    public JAXBElement<String> createFilterOrTypeType(String value) {
        return new JAXBElement<String>(_FilterOrTypeType_QNAME, String.class, FilterOrType.class, value);
    }

}
